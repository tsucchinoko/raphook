name: Build

on:
  push:
    branches: [main]
    paths:
      - packages/npm/raphook/package.json

jobs:
  check:
    name: Check version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

  build:
    needs: check
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux builds
          # - os: ubuntu-latest
          #   target: x86_64-unknown-linux-gnu
          #   artifact_name: raphook-linux-x64
          # - os: ubuntu-latest
          #   target: aarch64-unknown-linux-gnu
          #   artifact_name: raphook-linux-arm64
          #   use_cross: true

          # macOS builds
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: raphook-darwin-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: raphook-darwin-arm64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        if: matrix.use_cross
        run: cargo install cross

      - name: Build binary
        shell: bash
        run: |
          if [ "${{ matrix.use_cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi

      - name: Prepare package
        shell: bash
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/raphook ./dist/${{ matrix.artifact_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ./dist/${{ matrix.artifact_name }}
          if-no-files-found: error
